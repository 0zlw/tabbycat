import os

# gunicorn.conf
def when_ready(server):
    # touch app-initialized when ready
    print('Worker count of', WORKERS)
    open('/tmp/app-initialized', 'w').close()

# As per https://devcenter.heroku.com/articles/optimizing-dyno-usage#python
if os.environ.get('WEB_CONCURRENCY'):
    WORKERS = int(os.environ['WEB_CONCURRENCY']) + 1
else:
    WORKERS = 4

chdir = './tabbycat/'
bind = 'unix:///tmp/wsgi.socket'
workers = WORKERS
worker_class = 'sync' # Handle things async
worker_connections = 100 # Defaults to 1000; reduce this to limit memory leaks?