# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-05 16:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('adjfeedback', '0011_auto_20170224_1625'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='adjudicatorfeedback',
            options={'verbose_name': 'adjudicator feedback', 'verbose_name_plural': 'adjudicator feedbacks'},
        ),
        migrations.AlterModelOptions(
            name='adjudicatorfeedbackbooleananswer',
            options={'verbose_name': 'adjudicator feedback boolean answer', 'verbose_name_plural': 'adjudicator feedback boolean answers'},
        ),
        migrations.AlterModelOptions(
            name='adjudicatorfeedbackfloatanswer',
            options={'verbose_name': 'adjudicator feedback float answer', 'verbose_name_plural': 'adjudicator feedback float answers'},
        ),
        migrations.AlterModelOptions(
            name='adjudicatorfeedbackintegeranswer',
            options={'verbose_name': 'adjudicator feedback integer answer', 'verbose_name_plural': 'adjudicator feedback integer answers'},
        ),
        migrations.AlterModelOptions(
            name='adjudicatorfeedbackquestion',
            options={'verbose_name': 'adjudicator feedback question', 'verbose_name_plural': 'adjudicator feedback questions'},
        ),
        migrations.AlterModelOptions(
            name='adjudicatorfeedbackstringanswer',
            options={'verbose_name': 'adjudicator feedback string answer', 'verbose_name_plural': 'adjudicator feedback string answers'},
        ),
        migrations.AlterModelOptions(
            name='adjudicatortestscorehistory',
            options={'verbose_name': 'adjudicator test score history', 'verbose_name_plural': 'adjudicator test score histories'},
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedback',
            name='adjudicator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='participants.Adjudicator', verbose_name='adjudicator'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedback',
            name='score',
            field=models.FloatField(verbose_name='score'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedback',
            name='source_adjudicator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='adjallocation.DebateAdjudicator', verbose_name='source adjudicator'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedback',
            name='source_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='draw.DebateTeam', verbose_name='source team'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackbooleananswer',
            name='answer',
            field=models.BooleanField(verbose_name='answer'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackbooleananswer',
            name='feedback',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adjfeedback.AdjudicatorFeedback', verbose_name='feedback'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackbooleananswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adjfeedback.AdjudicatorFeedbackQuestion', verbose_name='question'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackfloatanswer',
            name='answer',
            field=models.FloatField(verbose_name='answer'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackfloatanswer',
            name='feedback',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adjfeedback.AdjudicatorFeedback', verbose_name='feedback'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackfloatanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adjfeedback.AdjudicatorFeedbackQuestion', verbose_name='question'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackintegeranswer',
            name='answer',
            field=models.IntegerField(verbose_name='answer'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackintegeranswer',
            name='feedback',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adjfeedback.AdjudicatorFeedback', verbose_name='feedback'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackintegeranswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adjfeedback.AdjudicatorFeedbackQuestion', verbose_name='question'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackquestion',
            name='answer_type',
            field=models.CharField(choices=[('bc', 'checkbox'), ('bs', 'yes/no (dropdown)'),
                ('i', 'integer (textbox)'), ('is', 'integer scale'), ('f', 'float'),
                ('t', 'text'), ('tl', 'long text'), ('ss', 'select one'),
                ('ms', 'select multiple')], max_length=2, verbose_name='answer type'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackquestion',
            name='choices',
            field=models.CharField(blank=True, help_text="Permissible choices for select one/multiple fields, separated by '//' (ignored for other fields)", max_length=500, verbose_name='choices'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackquestion',
            name='from_adj',
            field=models.BooleanField(help_text='Adjudicators should be asked this question (about other adjudicators)', verbose_name='from adjudicator'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackquestion',
            name='from_team',
            field=models.BooleanField(help_text='Teams should be asked this question', verbose_name='from team'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackquestion',
            name='max_value',
            field=models.FloatField(blank=True, help_text='Maximum allowed value for numeric fields (ignored for text or boolean fields)', null=True, verbose_name='maximum value'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackquestion',
            name='min_value',
            field=models.FloatField(blank=True, help_text='Minimum allowed value for numeric fields (ignored for text or boolean fields)', null=True, verbose_name='minimum value'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackquestion',
            name='name',
            field=models.CharField(help_text='A short name for the question, e.g., "Agree with decision"', max_length=30, verbose_name='maximum length'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackquestion',
            name='reference',
            field=models.SlugField(help_text='Code-compatible reference, e.g., "agree_with_decision"', verbose_name='reference'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackquestion',
            name='required',
            field=models.BooleanField(default=True, help_text='Whether participants are required to fill out this field', verbose_name='required'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackquestion',
            name='seq',
            field=models.IntegerField(help_text='The order in which questions are displayed', verbose_name='sequence number'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackquestion',
            name='text',
            field=models.CharField(help_text='The question displayed to participants, e.g., "Did you agree with the decision?"', max_length=255, verbose_name='text'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackquestion',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.Tournament', verbose_name='tournament'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackstringanswer',
            name='answer',
            field=models.TextField(verbose_name='answer'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackstringanswer',
            name='feedback',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adjfeedback.AdjudicatorFeedback', verbose_name='feedback'),
        ),
        migrations.AlterField(
            model_name='adjudicatorfeedbackstringanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adjfeedback.AdjudicatorFeedbackQuestion', verbose_name='question'),
        ),
        migrations.AlterField(
            model_name='adjudicatortestscorehistory',
            name='adjudicator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='participants.Adjudicator', verbose_name='adjudicator'),
        ),
        migrations.AlterField(
            model_name='adjudicatortestscorehistory',
            name='round',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tournaments.Round', verbose_name='round'),
        ),
        migrations.AlterField(
            model_name='adjudicatortestscorehistory',
            name='score',
            field=models.FloatField(verbose_name='score'),
        ),
        migrations.AlterField(
            model_name='adjudicatortestscorehistory',
            name='timestamp',
            field=models.DateTimeField(auto_now_add=True, verbose_name='timestamp'),
        ),
    ]
