# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-03 19:27
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdjudicatorFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('version', models.PositiveIntegerField()),
                ('submitter_type', models.CharField(choices=[('T', 'Tab room'), ('P', 'Public')], max_length=1)),
                ('confirm_timestamp', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('confirmed', models.BooleanField(default=False)),
                ('score', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='AdjudicatorFeedbackBooleanAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdjudicatorFeedbackFloatAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdjudicatorFeedbackIntegerAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdjudicatorFeedbackQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seq', models.IntegerField(help_text='The order in which questions are displayed')),
                ('text', models.CharField(help_text='The question displayed to participants, e.g., "Did you agree with the decision?"', max_length=255)),
                ('name', models.CharField(help_text='A short name for the question, e.g., "Agree with decision"', max_length=30)),
                ('reference', models.SlugField(help_text='Code-compatible reference, e.g., "agree_with_decision"')),
                ('chair_on_panellist', models.BooleanField()),
                ('panellist_on_chair', models.BooleanField()),
                ('panellist_on_panellist', models.BooleanField()),
                ('team_on_orallist', models.BooleanField()),
                ('answer_type', models.CharField(choices=[('bc', 'checkbox'), ('bs', 'yes/no (dropdown)'), ('i', 'integer (textbox)'), ('is', 'integer scale'), ('f', 'float'), ('t', 'text'), ('tl', 'long text'), ('ss', 'select one'), ('ms', 'select multiple')], max_length=2)),
                ('required', models.BooleanField(default=True, help_text='Whether participants are required to fill out this field')),
                ('min_value', models.FloatField(blank=True, help_text='Minimum allowed value for numeric fields (ignored for text or boolean fields)', null=True)),
                ('max_value', models.FloatField(blank=True, help_text='Maximum allowed value for numeric fields (ignored for text or boolean fields)', null=True)),
                ('choices', models.CharField(blank=True, help_text="Permissible choices for select one/multiple fields, separated by '//' (ignored for other fields)", max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AdjudicatorFeedbackStringAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=3500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdjudicatorTestScoreHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Adjudicator test score histories',
            },
        ),
    ]
