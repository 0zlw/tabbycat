# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-27 21:59
from __future__ import unicode_literals

from django.db import migrations


def convert_venuegroup_to_venuecategory(apps, schema_editor):
    """For each division, the VenueCategory that looks like the VenueGroup, and
    uses that."""

    VenueGroup = apps.get_model("venues", "VenueGroup")
    VenueCategory = apps.get_model("venues", "VenueCategory")
    Division = apps.get_model("divisions", "Division")

    mapping = {} # VenueGroup to VenueCategory

    for group in VenueGroup.objects.all():

        # these are the conversions used in venues/0017_convert_venuegroup_to_venuecategory
        category = VenueCategory.objects.filter(name=group.short_name,
                description=group.name).first()

        if category is None:
            # make a rudimentary second guess
            category = VenueCategory.objects.filter(name=group.short_name).first()

        # Note: If it didn't find an obviously suitable VenueCategory, it will just use None.

        mapping[group.id] = category.id

    for division in Division.objects.all():
        if division.venue_group_id is None:
            continue

        division.venue_category_id = mapping[division.venue_group_id]
        division.save()


class Migration(migrations.Migration):

    dependencies = [
        ('venues', '0019_auto_20170228_0941'),
        ('divisions', '0003_division_venue_category'),
    ]

    operations = [
        migrations.RunPython(
            convert_venuegroup_to_venuecategory,
            reverse_code=migrations.RunPython.noop,
            elidable=True,
        ),
    ]
